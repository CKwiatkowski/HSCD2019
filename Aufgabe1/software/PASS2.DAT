      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-IO_Port
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED0
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED1
   OPERAND2-02
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-BNT0
   OPERAND2-04
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-COM_Port
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-TXD
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-RXD
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ACONST
   OPERAND2-42
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SIXTEEN
   OPERAND2-10
    COMMENT-
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-EIGHT
   OPERAND2-08
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Register Mapping
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; alle acht Register s0 bis s7 stehen der ISR zur Verfuegung
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s0
   OPERAND2-IOR
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s1
   OPERAND2-TMP
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s2
   OPERAND2-CNTH
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s3
   OPERAND2-CNTL
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s6
   OPERAND2-CNTR16
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; alle acht Register s8 bis sF stehen der Main-Funktion zur Verfuegung
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s8
   OPERAND2-CNT16
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s9
   OPERAND2-CNT8
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sA
   OPERAND2-DATA
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sB
   OPERAND2-READ_REG
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sC
   OPERAND2-STATEWRITE
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sD
   OPERAND2-STATEREAD
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sE
   OPERAND2-READY_TO_WRITE
    COMMENT-
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sF
   OPERAND2-CNTR8
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-000
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Hauptfunktion
      LABEL-start
INSTRUCTION-AND
   OPERAND1-CNTH
   OPERAND2-00
    COMMENT-; Initialisierung der Zaehlers ...
      LABEL-
INSTRUCTION-AND
   OPERAND1-CNTL
   OPERAND2-00
    COMMENT-; in der ISR
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
   OPERAND2-00
    COMMENT-; Setzt Zustand auf 0
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
   OPERAND2-01
    COMMENT-; Write-Erlaubnis sperren
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
   OPERAND2-SIXTEEN
    COMMENT-; Taktzähler auf 16 setzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT8
   OPERAND2-EIGHT
    COMMENT-; Bitzähler auf 8 setzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
   OPERAND2-SIXTEEN
    COMMENT-; Taktzähler auf 16 setzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
   OPERAND2-EIGHT
    COMMENT-; Bitzähler auf 8 setzen
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
   OPERAND2-
    COMMENT-
      LABEL-loop
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; do nothing
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-loop
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Subroutine, die den Zustand des Buttons BTN0 auf die Leuchtdiode LED0 durchschaltet
      LABEL-BNT0LED0
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
   OPERAND2-IO_Port
    COMMENT-; IO-Port einlesen
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-TMP
   OPERAND2-IO_Port
    COMMENT-; IO-Port einlesen
      LABEL-
INSTRUCTION-AND
   OPERAND1-TMP
   OPERAND2-BNT0
    COMMENT-; Zustand von BNT0 ermitteln
      LABEL-
INSTRUCTION-SR0
   OPERAND1-TMP
   OPERAND2-
    COMMENT-; auf die Position ...
      LABEL-
INSTRUCTION-SR0
   OPERAND1-TMP
   OPERAND2-
    COMMENT-; ... von LED0 verschieben
      LABEL-
INSTRUCTION-AND
   OPERAND1-IOR
   OPERAND2-LED1
    COMMENT-; Zustand von LED1 ermitteln
      LABEL-
INSTRUCTION-OR
   OPERAND1-IOR
   OPERAND2-TMP
    COMMENT-; LED1 mit BNT0 konkatinieren
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
   OPERAND2-IO_Port
    COMMENT-; den neuen Wert ueber IO-Port ausgeben
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Subroutine, die die Leuchtdione LED1 mit ca. 1 Hz blinken laesst
      LABEL-BLINK
INSTRUCTION-ADD
   OPERAND1-CNTL
   OPERAND2-01
    COMMENT-; den 16-Bit-Zaehler ...
      LABEL-
INSTRUCTION-ADDCY
   OPERAND1-CNTH
   OPERAND2-00
    COMMENT-; .. inkrementieren
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
   OPERAND2-BLINK0
    COMMENT-; kein Ueberlauf -> exit, sonst
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
   OPERAND2-IO_Port
    COMMENT-; IO-Port einlesen
      LABEL-
INSTRUCTION-XOR
   OPERAND1-IOR
   OPERAND2-LED1
    COMMENT-; LED1 toggeln
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
   OPERAND2-IO_Port
    COMMENT-; den neuen Wert ueber IO-Port ausgeben
      LABEL-BLINK0
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Subroutine, die Daten ueber das serielle Eingangssignal RXD abtastet,
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; zu einem Byte zusammensetzt, entschidet, ob das empfangene Byte
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; ein Buchstabe oder eine Ziffer ist, und ggf. das Byte seriell
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; ueber das serielle Ausgangssignal TXD ausgibt
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; in dieser Version ist eine einfache Echo-Funktion implementiert
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;COMM:
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;        RETURN
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Subroutine, die Daten in das Ausgangsportal TXD schreibt
      LABEL-WRITE
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READY_TO_WRITE
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-WRITE_STARTBIT
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-WRITE_DATA
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
   OPERAND2-02
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-WRITE_STOPBIT
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-WRITE_IDLE
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-WRITE_STARTBIT
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT16
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
   OPERAND2-SIXTEEN
    COMMENT-;Zaehler zurücksetzen         ; 16 Takte abwarten
      LABEL-
INSTRUCTION-AND
   OPERAND1-IOR
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
   OPERAND2-COM_Port
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-WRITE_DATA
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT16
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
   OPERAND2-SIXTEEN
    COMMENT-;Zaehler zurücksetzen         ; 16 Takte abwarten
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-DATA
   OPERAND2-COM_Port
    COMMENT-; Datenregister auf Output setzen
      LABEL-
INSTRUCTION-SR0
   OPERAND1-DATA
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT8
   OPERAND2-01
    COMMENT-; Daten bitweise herausschreiben
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT8
   OPERAND2-EIGHT
    COMMENT-; Zaehler zurücksetzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
   OPERAND2-02
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-WRITE_STOPBIT
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT16
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
   OPERAND2-SIXTEEN
    COMMENT-;Zaehler zurücksetzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-IOR
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
   OPERAND2-COM_Port
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
   OPERAND2-03
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
   OPERAND2-01
    COMMENT-;Schreibsperre aktivieren
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-WRITE_IDLE
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-READ
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-READ_STARTBIT
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-READ_DATA
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
   OPERAND2-02
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-READ_STOPBIT
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-READ_IDLE
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-READ_DATA
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR16
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
   OPERAND2-SIXTEEN
    COMMENT-
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
   OPERAND2-COM_Port
    COMMENT-
      LABEL-
INSTRUCTION-OR
   OPERAND1-READ_REG
   OPERAND2-IOR
    COMMENT-
      LABEL-
INSTRUCTION-RR
   OPERAND1-READ_REG
   OPERAND2-
    COMMENT-; Inhalt des Read-Registers nach links verschieben
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR8
   OPERAND2-01
    COMMENT-; Daten bitweise herausschreiben
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
   OPERAND2-EIGHT
    COMMENT-; Zaehler zurücksetzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
   OPERAND2-02
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; change state
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-CHECK_GROSS
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
   OPERAND2-5B
    COMMENT-; ist es größer als 5A?
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
   OPERAND2-READ_IDLE
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
   OPERAND2-41
    COMMENT-; ist es kleiner als 41?
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
   OPERAND2-CHECK_ZAHL
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
   OPERAND2-03
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-DATA
   OPERAND2-READ_REG
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
   OPERAND2-00
    COMMENT-;Schreibsperre aufheben
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-CHECK_ZAHL
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
   OPERAND2-3A
    COMMENT-; ist es größer als 39
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
   OPERAND2-READ_IDLE
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
   OPERAND2-03
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-DATA
   OPERAND2-READ_REG
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
      LABEL-
INSTRUCTION-AND
   OPERAND1-READY_TO_WRITE
   OPERAND2-00
    COMMENT-;Schreibsperre aufheben
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-READ_STARTBIT
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
   OPERAND2-COM_Port
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-IOR
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR8
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
   OPERAND2-EIGHT
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-READ_STOPBIT
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR16
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
   OPERAND2-SIXTEEN
    COMMENT-;Zaehler zurücksetzen
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
   OPERAND2-COM_Port
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-IOR
   OPERAND2-01
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Bereich einschränken
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
   OPERAND2-30
    COMMENT-;ist es kleiner als #30?
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
   OPERAND2-READ_IDLE
    COMMENT-
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
   OPERAND2-7B
    COMMENT-;ist es größer als #7A?
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
   OPERAND2-READ_IDLE
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Kleinbuchstabe
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
   OPERAND2-61
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
   OPERAND2-CHECK_GROSS
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
   OPERAND2-03
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-DATA
   OPERAND2-READ_REG
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
      LABEL-
INSTRUCTION-AND
   OPERAND1-READY_TO_WRITE
   OPERAND2-00
    COMMENT-;Schreibsperre aufheben
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-READ_IDLE
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
   OPERAND2-EIGHT
    COMMENT-; Zaehler zurücksetzen
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
   OPERAND2-SIXTEEN
    COMMENT-;Zaehler zurücksetzen
      LABEL-
INSTRUCTION-AND
   OPERAND1-STATEREAD
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-AND
   OPERAND1-READ_REG
   OPERAND2-00
    COMMENT-
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-300
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Interrupt-Service-Routine
      LABEL-ISR
INSTRUCTION-CALL
   OPERAND1-BNT0LED0
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-CALL
   OPERAND1-BLINK
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-CALL
   OPERAND1-READ
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-CALL
   OPERAND1-WRITE
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; --------------------------------------------------------------------------------------------
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Interrupt-Vektor
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
   OPERAND2-
    COMMENT-
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR
   OPERAND2-
    COMMENT-
