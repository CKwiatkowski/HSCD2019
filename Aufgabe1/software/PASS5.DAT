    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT IO_Port, 00
  LOGFORMAT-CONSTANT IO_Port, 00
INSTRUCTION-CONSTANT
   OPERAND1-IO_Port
  OP1 VALUE-IO_Port
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED0, 01
  LOGFORMAT-CONSTANT LED0, 01
INSTRUCTION-CONSTANT
   OPERAND1-LED0
  OP1 VALUE-LED0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED1, 02
  LOGFORMAT-CONSTANT LED1, 02
INSTRUCTION-CONSTANT
   OPERAND1-LED1
  OP1 VALUE-LED1
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT BNT0, 04
  LOGFORMAT-CONSTANT BNT0, 04
INSTRUCTION-CONSTANT
   OPERAND1-BNT0
  OP1 VALUE-BNT0
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT COM_Port, 01
  LOGFORMAT-CONSTANT COM_Port, 01
INSTRUCTION-CONSTANT
   OPERAND1-COM_Port
  OP1 VALUE-COM_Port
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT TXD, 01
  LOGFORMAT-CONSTANT TXD, 01
INSTRUCTION-CONSTANT
   OPERAND1-TXD
  OP1 VALUE-TXD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT RXD, 01
  LOGFORMAT-CONSTANT RXD, 01
INSTRUCTION-CONSTANT
   OPERAND1-RXD
  OP1 VALUE-RXD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT ACONST, 42
  LOGFORMAT-CONSTANT ACONST, 42
INSTRUCTION-CONSTANT
   OPERAND1-ACONST
  OP1 VALUE-ACONST
   OPERAND2-42
  OP2 VALUE-42
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT SIXTEEN, 10
  LOGFORMAT-CONSTANT SIXTEEN, 10
INSTRUCTION-CONSTANT
   OPERAND1-SIXTEEN
  OP1 VALUE-SIXTEEN
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT EIGHT, 08
  LOGFORMAT-CONSTANT EIGHT, 08
INSTRUCTION-CONSTANT
   OPERAND1-EIGHT
  OP1 VALUE-EIGHT
   OPERAND2-08
  OP2 VALUE-08
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Register Mapping
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; alle acht Register s0 bis s7 stehen der ISR zur Verfuegung
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s0, IOR
  LOGFORMAT-NAMEREG s0, IOR
INSTRUCTION-NAMEREG
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-IOR
  OP2 VALUE-IOR
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s1, TMP
  LOGFORMAT-NAMEREG s1, TMP
INSTRUCTION-NAMEREG
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-TMP
  OP2 VALUE-TMP
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s2, CNTH
  LOGFORMAT-NAMEREG s2, CNTH
INSTRUCTION-NAMEREG
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-CNTH
  OP2 VALUE-CNTH
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s3, CNTL
  LOGFORMAT-NAMEREG s3, CNTL
INSTRUCTION-NAMEREG
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-CNTL
  OP2 VALUE-CNTL
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s6, CNTR16
  LOGFORMAT-NAMEREG s6, CNTR16
INSTRUCTION-NAMEREG
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-CNTR16
  OP2 VALUE-CNTR16
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; alle acht Register s8 bis sF stehen der Main-Funktion zur Verfuegung
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s8, CNT16
  LOGFORMAT-NAMEREG s8, CNT16
INSTRUCTION-NAMEREG
   OPERAND1-s8
  OP1 VALUE-s8
   OPERAND2-CNT16
  OP2 VALUE-CNT16
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s9, CNT8
  LOGFORMAT-NAMEREG s9, CNT8
INSTRUCTION-NAMEREG
   OPERAND1-s9
  OP1 VALUE-s9
   OPERAND2-CNT8
  OP2 VALUE-CNT8
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG sA, DATA
  LOGFORMAT-NAMEREG sA, DATA
INSTRUCTION-NAMEREG
   OPERAND1-sA
  OP1 VALUE-sA
   OPERAND2-DATA
  OP2 VALUE-DATA
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG sB, READ_REG
  LOGFORMAT-NAMEREG sB, READ_REG
INSTRUCTION-NAMEREG
   OPERAND1-sB
  OP1 VALUE-sB
   OPERAND2-READ_REG
  OP2 VALUE-READ_REG
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG sC, STATEWRITE
  LOGFORMAT-NAMEREG sC, STATEWRITE
INSTRUCTION-NAMEREG
   OPERAND1-sC
  OP1 VALUE-sC
   OPERAND2-STATEWRITE
  OP2 VALUE-STATEWRITE
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG sD, STATEREAD
  LOGFORMAT-NAMEREG sD, STATEREAD
INSTRUCTION-NAMEREG
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-STATEREAD
  OP2 VALUE-STATEREAD
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG sE, READY_TO_WRITE
  LOGFORMAT-NAMEREG sE, READY_TO_WRITE
INSTRUCTION-NAMEREG
   OPERAND1-sE
  OP1 VALUE-sE
   OPERAND2-READY_TO_WRITE
  OP2 VALUE-READY_TO_WRITE
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG sF, CNTR8
  LOGFORMAT-NAMEREG sF, CNTR8
INSTRUCTION-NAMEREG
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CNTR8
  OP2 VALUE-CNTR8
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-000
      LABEL-
  FORMATTED-ADDRESS 000
  LOGFORMAT-ADDRESS 000
INSTRUCTION-ADDRESS
   OPERAND1-000
  OP1 VALUE-000
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Hauptfunktion
    ADDRESS-000
      LABEL-start
  FORMATTED-AND CNTH, 00
  LOGFORMAT-AND CNTH[s2], 00
INSTRUCTION-AND
   OPERAND1-CNTH
  OP1 VALUE-s2
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; Initialisierung der Zaehlers ...
    ADDRESS-001
      LABEL-
  FORMATTED-AND CNTL, 00
  LOGFORMAT-AND CNTL[s3], 00
INSTRUCTION-AND
   OPERAND1-CNTL
  OP1 VALUE-s3
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; in der ISR
    ADDRESS-002
      LABEL-
  FORMATTED-LOAD STATEWRITE, 00
  LOGFORMAT-LOAD STATEWRITE[sC], 00
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; Setzt Zustand auf 0
    ADDRESS-003
      LABEL-
  FORMATTED-LOAD READY_TO_WRITE, 01
  LOGFORMAT-LOAD READY_TO_WRITE[sE], 01
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Write-Erlaubnis sperren
    ADDRESS-004
      LABEL-
  FORMATTED-LOAD CNT16, SIXTEEN
  LOGFORMAT-LOAD CNT16[s8], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-; Taktzähler auf 16 setzen
    ADDRESS-005
      LABEL-
  FORMATTED-LOAD CNT8, EIGHT
  LOGFORMAT-LOAD CNT8[s9], EIGHT[08]
INSTRUCTION-LOAD
   OPERAND1-CNT8
  OP1 VALUE-s9
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Bitzähler auf 8 setzen
    ADDRESS-006
      LABEL-
  FORMATTED-LOAD CNTR16, SIXTEEN
  LOGFORMAT-LOAD CNTR16[s6], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-; Taktzähler auf 16 setzen
    ADDRESS-007
      LABEL-
  FORMATTED-LOAD CNTR8, EIGHT
  LOGFORMAT-LOAD CNTR8[sF], EIGHT[08]
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Bitzähler auf 8 setzen
    ADDRESS-008
      LABEL-
  FORMATTED-ENABLE INTERRUPT
  LOGFORMAT-ENABLE INTERRUPT
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
  OP1 VALUE-INTERRUPT
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-009
      LABEL-loop
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; do nothing
    ADDRESS-009
      LABEL-
  FORMATTED-JUMP loop
  LOGFORMAT-JUMP loop[009]
INSTRUCTION-JUMP
   OPERAND1-loop
  OP1 VALUE-009
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-00A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die den Zustand des Buttons BTN0 auf die Leuchtdiode LED0 durchschaltet
    ADDRESS-00A
      LABEL-BNT0LED0
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00A
      LABEL-
  FORMATTED-INPUT IOR, IO_Port
  LOGFORMAT-INPUT IOR[s0], IO_Port[00]
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; IO-Port einlesen
    ADDRESS-00B
      LABEL-
  FORMATTED-INPUT TMP, IO_Port
  LOGFORMAT-INPUT TMP[s1], IO_Port[00]
INSTRUCTION-INPUT
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; IO-Port einlesen
    ADDRESS-00C
      LABEL-
  FORMATTED-AND TMP, BNT0
  LOGFORMAT-AND TMP[s1], BNT0[04]
INSTRUCTION-AND
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-BNT0
  OP2 VALUE-04
    COMMENT-; Zustand von BNT0 ermitteln
    ADDRESS-00D
      LABEL-
  FORMATTED-SR0 TMP
  LOGFORMAT-SR0 TMP[s1]
INSTRUCTION-SR0
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-; auf die Position ...
    ADDRESS-00E
      LABEL-
  FORMATTED-SR0 TMP
  LOGFORMAT-SR0 TMP[s1]
INSTRUCTION-SR0
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ... von LED0 verschieben
    ADDRESS-00F
      LABEL-
  FORMATTED-AND IOR, LED1
  LOGFORMAT-AND IOR[s0], LED1[02]
INSTRUCTION-AND
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-LED1
  OP2 VALUE-02
    COMMENT-; Zustand von LED1 ermitteln
    ADDRESS-010
      LABEL-
  FORMATTED-OR IOR, TMP
  LOGFORMAT-OR IOR[s0], TMP[s1]
INSTRUCTION-OR
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-TMP
  OP2 VALUE-s1
    COMMENT-; LED1 mit BNT0 konkatinieren
    ADDRESS-011
      LABEL-
  FORMATTED-OUTPUT IOR, IO_Port
  LOGFORMAT-OUTPUT IOR[s0], IO_Port[00]
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; den neuen Wert ueber IO-Port ausgeben
    ADDRESS-012
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-013
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-013
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die die Leuchtdione LED1 mit ca. 1 Hz blinken laesst
    ADDRESS-013
      LABEL-BLINK
  FORMATTED-ADD CNTL, 01
  LOGFORMAT-ADD CNTL[s3], 01
INSTRUCTION-ADD
   OPERAND1-CNTL
  OP1 VALUE-s3
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; den 16-Bit-Zaehler ...
    ADDRESS-014
      LABEL-
  FORMATTED-ADDCY CNTH, 00
  LOGFORMAT-ADDCY CNTH[s2], 00
INSTRUCTION-ADDCY
   OPERAND1-CNTH
  OP1 VALUE-s2
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; .. inkrementieren
    ADDRESS-015
      LABEL-
  FORMATTED-JUMP NC, BLINK0
  LOGFORMAT-JUMP NC, BLINK0[019]
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-BLINK0
  OP2 VALUE-019
    COMMENT-; kein Ueberlauf -> exit, sonst
    ADDRESS-016
      LABEL-
  FORMATTED-INPUT IOR, IO_Port
  LOGFORMAT-INPUT IOR[s0], IO_Port[00]
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; IO-Port einlesen
    ADDRESS-017
      LABEL-
  FORMATTED-XOR IOR, LED1
  LOGFORMAT-XOR IOR[s0], LED1[02]
INSTRUCTION-XOR
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-LED1
  OP2 VALUE-02
    COMMENT-; LED1 toggeln
    ADDRESS-018
      LABEL-
  FORMATTED-OUTPUT IOR, IO_Port
  LOGFORMAT-OUTPUT IOR[s0], IO_Port[00]
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; den neuen Wert ueber IO-Port ausgeben
    ADDRESS-019
      LABEL-BLINK0
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die Daten ueber das serielle Eingangssignal RXD abtastet,
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; zu einem Byte zusammensetzt, entschidet, ob das empfangene Byte
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ein Buchstabe oder eine Ziffer ist, und ggf. das Byte seriell
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ueber das serielle Ausgangssignal TXD ausgibt
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; in dieser Version ist eine einfache Echo-Funktion implementiert
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;COMM:
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;        RETURN
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die Daten in das Ausgangsportal TXD schreibt
    ADDRESS-01A
      LABEL-WRITE
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01A
      LABEL-
  FORMATTED-COMPARE READY_TO_WRITE, 00
  LOGFORMAT-COMPARE READY_TO_WRITE[sE], 00
INSTRUCTION-COMPARE
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-01B
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01C
      LABEL-
  FORMATTED-COMPARE STATEWRITE, 00
  LOGFORMAT-COMPARE STATEWRITE[sC], 00
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-01D
      LABEL-
  FORMATTED-JUMP Z, WRITE_STARTBIT
  LOGFORMAT-JUMP Z, WRITE_STARTBIT[023]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-WRITE_STARTBIT
  OP2 VALUE-023
    COMMENT-
    ADDRESS-01E
      LABEL-
  FORMATTED-COMPARE STATEWRITE, 01
  LOGFORMAT-COMPARE STATEWRITE[sC], 01
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-01F
      LABEL-
  FORMATTED-JUMP Z, WRITE_DATA
  LOGFORMAT-JUMP Z, WRITE_DATA[02A]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-WRITE_DATA
  OP2 VALUE-02A
    COMMENT-
    ADDRESS-020
      LABEL-
  FORMATTED-COMPARE STATEWRITE, 02
  LOGFORMAT-COMPARE STATEWRITE[sC], 02
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-021
      LABEL-
  FORMATTED-JUMP Z, WRITE_STOPBIT
  LOGFORMAT-JUMP Z, WRITE_STOPBIT[034]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-WRITE_STOPBIT
  OP2 VALUE-034
    COMMENT-
    ADDRESS-022
      LABEL-
  FORMATTED-JUMP WRITE_IDLE
  LOGFORMAT-JUMP WRITE_IDLE[03C]
INSTRUCTION-JUMP
   OPERAND1-WRITE_IDLE
  OP1 VALUE-03C
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-023
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-023
      LABEL-WRITE_STARTBIT
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-023
      LABEL-
  FORMATTED-SUB CNT16, 01
  LOGFORMAT-SUB CNT16[s8], 01
INSTRUCTION-SUB
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-024
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-025
      LABEL-
  FORMATTED-LOAD CNT16, SIXTEEN
  LOGFORMAT-LOAD CNT16[s8], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen         ; 16 Takte abwarten
    ADDRESS-026
      LABEL-
  FORMATTED-AND IOR, 00
  LOGFORMAT-AND IOR[s0], 00
INSTRUCTION-AND
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-027
      LABEL-
  FORMATTED-OUTPUT IOR, COM_Port
  LOGFORMAT-OUTPUT IOR[s0], COM_Port[01]
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-028
      LABEL-
  FORMATTED-LOAD STATEWRITE, 01
  LOGFORMAT-LOAD STATEWRITE[sC], 01
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-029
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-02A
      LABEL-WRITE_DATA
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02A
      LABEL-
  FORMATTED-SUB CNT16, 01
  LOGFORMAT-SUB CNT16[s8], 01
INSTRUCTION-SUB
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-02B
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02C
      LABEL-
  FORMATTED-LOAD CNT16, SIXTEEN
  LOGFORMAT-LOAD CNT16[s8], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen         ; 16 Takte abwarten
    ADDRESS-02D
      LABEL-
  FORMATTED-OUTPUT DATA, COM_Port
  LOGFORMAT-OUTPUT DATA[sA], COM_Port[01]
INSTRUCTION-OUTPUT
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-; Datenregister auf Output setzen
    ADDRESS-02E
      LABEL-
  FORMATTED-SR0 DATA
  LOGFORMAT-SR0 DATA[sA]
INSTRUCTION-SR0
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02F
      LABEL-
  FORMATTED-SUB CNT8, 01
  LOGFORMAT-SUB CNT8[s9], 01
INSTRUCTION-SUB
   OPERAND1-CNT8
  OP1 VALUE-s9
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Daten bitweise herausschreiben
    ADDRESS-030
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-031
      LABEL-
  FORMATTED-LOAD CNT8, EIGHT
  LOGFORMAT-LOAD CNT8[s9], EIGHT[08]
INSTRUCTION-LOAD
   OPERAND1-CNT8
  OP1 VALUE-s9
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Zaehler zurücksetzen
    ADDRESS-032
      LABEL-
  FORMATTED-LOAD STATEWRITE, 02
  LOGFORMAT-LOAD STATEWRITE[sC], 02
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-033
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-034
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-034
      LABEL-WRITE_STOPBIT
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-034
      LABEL-
  FORMATTED-SUB CNT16, 01
  LOGFORMAT-SUB CNT16[s8], 01
INSTRUCTION-SUB
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-035
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-036
      LABEL-
  FORMATTED-LOAD CNT16, SIXTEEN
  LOGFORMAT-LOAD CNT16[s8], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen
    ADDRESS-037
      LABEL-
  FORMATTED-LOAD IOR, 01
  LOGFORMAT-LOAD IOR[s0], 01
INSTRUCTION-LOAD
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-038
      LABEL-
  FORMATTED-OUTPUT IOR, COM_Port
  LOGFORMAT-OUTPUT IOR[s0], COM_Port[01]
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-039
      LABEL-
  FORMATTED-LOAD STATEWRITE, 03
  LOGFORMAT-LOAD STATEWRITE[sC], 03
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-03A
      LABEL-
  FORMATTED-LOAD READY_TO_WRITE, 01
  LOGFORMAT-LOAD READY_TO_WRITE[sE], 01
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-;Schreibsperre aktivieren
    ADDRESS-03B
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03C
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-03C
      LABEL-WRITE_IDLE
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03C
      LABEL-
  FORMATTED-LOAD STATEWRITE, 00
  LOGFORMAT-LOAD STATEWRITE[sC], 00
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-03D
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-03E
      LABEL-READ
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03E
      LABEL-
  FORMATTED-COMPARE STATEREAD, 00
  LOGFORMAT-COMPARE STATEREAD[sD], 00
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-03F
      LABEL-
  FORMATTED-JUMP Z, READ_STARTBIT
  LOGFORMAT-JUMP Z, READ_STARTBIT[05E]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-READ_STARTBIT
  OP2 VALUE-05E
    COMMENT-
    ADDRESS-040
      LABEL-
  FORMATTED-COMPARE STATEREAD, 01
  LOGFORMAT-COMPARE STATEREAD[sD], 01
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-041
      LABEL-
  FORMATTED-JUMP Z, READ_DATA
  LOGFORMAT-JUMP Z, READ_DATA[045]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-READ_DATA
  OP2 VALUE-045
    COMMENT-
    ADDRESS-042
      LABEL-
  FORMATTED-COMPARE STATEREAD, 02
  LOGFORMAT-COMPARE STATEREAD[sD], 02
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-043
      LABEL-
  FORMATTED-JUMP Z, READ_STOPBIT
  LOGFORMAT-JUMP Z, READ_STOPBIT[066]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-READ_STOPBIT
  OP2 VALUE-066
    COMMENT-
    ADDRESS-044
      LABEL-
  FORMATTED-JUMP READ_IDLE
  LOGFORMAT-JUMP READ_IDLE[076]
INSTRUCTION-JUMP
   OPERAND1-READ_IDLE
  OP1 VALUE-076
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-045
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-045
      LABEL-READ_DATA
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-045
      LABEL-
  FORMATTED-SUB CNTR16, 01
  LOGFORMAT-SUB CNTR16[s6], 01
INSTRUCTION-SUB
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-046
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-047
      LABEL-
  FORMATTED-LOAD CNTR16, SIXTEEN
  LOGFORMAT-LOAD CNTR16[s6], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-
    ADDRESS-048
      LABEL-
  FORMATTED-INPUT IOR, COM_Port
  LOGFORMAT-INPUT IOR[s0], COM_Port[01]
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-049
      LABEL-
  FORMATTED-OR READ_REG, IOR
  LOGFORMAT-OR READ_REG[sB], IOR[s0]
INSTRUCTION-OR
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-IOR
  OP2 VALUE-s0
    COMMENT-
    ADDRESS-04A
      LABEL-
  FORMATTED-RR READ_REG
  LOGFORMAT-RR READ_REG[sB]
INSTRUCTION-RR
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Inhalt des Read-Registers nach links verschieben
    ADDRESS-04B
      LABEL-
  FORMATTED-SUB CNTR8, 01
  LOGFORMAT-SUB CNTR8[sF], 01
INSTRUCTION-SUB
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Daten bitweise herausschreiben
    ADDRESS-04C
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-04D
      LABEL-
  FORMATTED-LOAD CNTR8, EIGHT
  LOGFORMAT-LOAD CNTR8[sF], EIGHT[08]
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Zaehler zurücksetzen
    ADDRESS-04E
      LABEL-
  FORMATTED-LOAD STATEREAD, 02
  LOGFORMAT-LOAD STATEREAD[sD], 02
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-04F
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; change state
    ADDRESS-04F
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-050
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-050
      LABEL-CHECK_GROSS
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-050
      LABEL-
  FORMATTED-COMPARE READ_REG, 5B
  LOGFORMAT-COMPARE READ_REG[sB], 5B
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-5B
  OP2 VALUE-5B
    COMMENT-; ist es größer als 5A?
    ADDRESS-051
      LABEL-
  FORMATTED-JUMP NC, READ_IDLE
  LOGFORMAT-JUMP NC, READ_IDLE[076]
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-052
      LABEL-
  FORMATTED-COMPARE READ_REG, 41
  LOGFORMAT-COMPARE READ_REG[sB], 41
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-41
  OP2 VALUE-41
    COMMENT-; ist es kleiner als 41?
    ADDRESS-053
      LABEL-
  FORMATTED-JUMP C, CHECK_ZAHL
  LOGFORMAT-JUMP C, CHECK_ZAHL[058]
INSTRUCTION-JUMP
   OPERAND1-C
  OP1 VALUE-C
   OPERAND2-CHECK_ZAHL
  OP2 VALUE-058
    COMMENT-
    ADDRESS-054
      LABEL-
  FORMATTED-LOAD STATEREAD, 03
  LOGFORMAT-LOAD STATEREAD[sD], 03
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-055
      LABEL-
  FORMATTED-LOAD DATA, READ_REG
  LOGFORMAT-LOAD DATA[sA], READ_REG[sB]
INSTRUCTION-LOAD
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-READ_REG
  OP2 VALUE-sB
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
    ADDRESS-056
      LABEL-
  FORMATTED-LOAD READY_TO_WRITE, 00
  LOGFORMAT-LOAD READY_TO_WRITE[sE], 00
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;Schreibsperre aufheben
    ADDRESS-057
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-058
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-058
      LABEL-CHECK_ZAHL
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-058
      LABEL-
  FORMATTED-COMPARE READ_REG, 3A
  LOGFORMAT-COMPARE READ_REG[sB], 3A
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-3A
  OP2 VALUE-3A
    COMMENT-; ist es größer als 39
    ADDRESS-059
      LABEL-
  FORMATTED-JUMP NC, READ_IDLE
  LOGFORMAT-JUMP NC, READ_IDLE[076]
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-05A
      LABEL-
  FORMATTED-LOAD STATEREAD, 03
  LOGFORMAT-LOAD STATEREAD[sD], 03
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-05B
      LABEL-
  FORMATTED-LOAD DATA, READ_REG
  LOGFORMAT-LOAD DATA[sA], READ_REG[sB]
INSTRUCTION-LOAD
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-READ_REG
  OP2 VALUE-sB
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
    ADDRESS-05C
      LABEL-
  FORMATTED-AND READY_TO_WRITE, 00
  LOGFORMAT-AND READY_TO_WRITE[sE], 00
INSTRUCTION-AND
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;Schreibsperre aufheben
    ADDRESS-05D
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-05E
      LABEL-READ_STARTBIT
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05E
      LABEL-
  FORMATTED-INPUT IOR, COM_Port
  LOGFORMAT-INPUT IOR[s0], COM_Port[01]
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-05F
      LABEL-
  FORMATTED-COMPARE IOR, 00
  LOGFORMAT-COMPARE IOR[s0], 00
INSTRUCTION-COMPARE
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-060
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-061
      LABEL-
  FORMATTED-SUB CNTR8, 01
  LOGFORMAT-SUB CNTR8[sF], 01
INSTRUCTION-SUB
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-062
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-063
      LABEL-
  FORMATTED-LOAD CNTR8, EIGHT
  LOGFORMAT-LOAD CNTR8[sF], EIGHT[08]
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-
    ADDRESS-064
      LABEL-
  FORMATTED-LOAD STATEREAD, 01
  LOGFORMAT-LOAD STATEREAD[sD], 01
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-065
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-066
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-066
      LABEL-READ_STOPBIT
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-066
      LABEL-
  FORMATTED-SUB CNTR16, 01
  LOGFORMAT-SUB CNTR16[s6], 01
INSTRUCTION-SUB
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-067
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-068
      LABEL-
  FORMATTED-LOAD CNTR16, SIXTEEN
  LOGFORMAT-LOAD CNTR16[s6], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen
    ADDRESS-069
      LABEL-
  FORMATTED-INPUT IOR, COM_Port
  LOGFORMAT-INPUT IOR[s0], COM_Port[01]
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-06A
      LABEL-
  FORMATTED-COMPARE IOR, 01
  LOGFORMAT-COMPARE IOR[s0], 01
INSTRUCTION-COMPARE
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-06B
      LABEL-
  FORMATTED-RETURN NZ
  LOGFORMAT-RETURN NZ
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-06C
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Bereich einschränken
    ADDRESS-06C
      LABEL-
  FORMATTED-COMPARE READ_REG, 30
  LOGFORMAT-COMPARE READ_REG[sB], 30
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-;ist es kleiner als #30?
    ADDRESS-06D
      LABEL-
  FORMATTED-JUMP C, READ_IDLE
  LOGFORMAT-JUMP C, READ_IDLE[076]
INSTRUCTION-JUMP
   OPERAND1-C
  OP1 VALUE-C
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-06E
      LABEL-
  FORMATTED-COMPARE READ_REG, 7B
  LOGFORMAT-COMPARE READ_REG[sB], 7B
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-7B
  OP2 VALUE-7B
    COMMENT-;ist es größer als #7A?
    ADDRESS-06F
      LABEL-
  FORMATTED-JUMP NC, READ_IDLE
  LOGFORMAT-JUMP NC, READ_IDLE[076]
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-070
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Kleinbuchstabe
    ADDRESS-070
      LABEL-
  FORMATTED-COMPARE READ_REG, 61
  LOGFORMAT-COMPARE READ_REG[sB], 61
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-61
  OP2 VALUE-61
    COMMENT-
    ADDRESS-071
      LABEL-
  FORMATTED-JUMP C, CHECK_GROSS
  LOGFORMAT-JUMP C, CHECK_GROSS[050]
INSTRUCTION-JUMP
   OPERAND1-C
  OP1 VALUE-C
   OPERAND2-CHECK_GROSS
  OP2 VALUE-050
    COMMENT-
    ADDRESS-072
      LABEL-
  FORMATTED-LOAD STATEREAD, 03
  LOGFORMAT-LOAD STATEREAD[sD], 03
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-073
      LABEL-
  FORMATTED-LOAD DATA, READ_REG
  LOGFORMAT-LOAD DATA[sA], READ_REG[sB]
INSTRUCTION-LOAD
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-READ_REG
  OP2 VALUE-sB
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
    ADDRESS-074
      LABEL-
  FORMATTED-AND READY_TO_WRITE, 00
  LOGFORMAT-AND READY_TO_WRITE[sE], 00
INSTRUCTION-AND
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;Schreibsperre aufheben
    ADDRESS-075
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-076
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-076
      LABEL-READ_IDLE
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-076
      LABEL-
  FORMATTED-LOAD CNTR8, EIGHT
  LOGFORMAT-LOAD CNTR8[sF], EIGHT[08]
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Zaehler zurücksetzen
    ADDRESS-077
      LABEL-
  FORMATTED-LOAD CNTR16, SIXTEEN
  LOGFORMAT-LOAD CNTR16[s6], SIXTEEN[10]
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen
    ADDRESS-078
      LABEL-
  FORMATTED-AND STATEREAD, 00
  LOGFORMAT-AND STATEREAD[sD], 00
INSTRUCTION-AND
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-079
      LABEL-
  FORMATTED-AND READ_REG, 00
  LOGFORMAT-AND READ_REG[sB], 00
INSTRUCTION-AND
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-07A
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-07B
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-300
      LABEL-
  FORMATTED-ADDRESS 300
  LOGFORMAT-ADDRESS 300
INSTRUCTION-ADDRESS
   OPERAND1-300
  OP1 VALUE-300
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-300
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt-Service-Routine
    ADDRESS-300
      LABEL-ISR
  FORMATTED-CALL BNT0LED0
  LOGFORMAT-CALL BNT0LED0[00A]
INSTRUCTION-CALL
   OPERAND1-BNT0LED0
  OP1 VALUE-00A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-301
      LABEL-
  FORMATTED-CALL BLINK
  LOGFORMAT-CALL BLINK[013]
INSTRUCTION-CALL
   OPERAND1-BLINK
  OP1 VALUE-013
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-302
      LABEL-
  FORMATTED-CALL READ
  LOGFORMAT-CALL READ[03E]
INSTRUCTION-CALL
   OPERAND1-READ
  OP1 VALUE-03E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-303
      LABEL-
  FORMATTED-CALL WRITE
  LOGFORMAT-CALL WRITE[01A]
INSTRUCTION-CALL
   OPERAND1-WRITE
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-304
      LABEL-
  FORMATTED-RETURNI ENABLE
  LOGFORMAT-RETURNI ENABLE
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-305
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-305
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt-Vektor
    ADDRESS-3FF
      LABEL-
  FORMATTED-ADDRESS 3FF
  LOGFORMAT-ADDRESS 3FF
INSTRUCTION-ADDRESS
   OPERAND1-3FF
  OP1 VALUE-3FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-3FF
      LABEL-
  FORMATTED-JUMP ISR
  LOGFORMAT-JUMP ISR[300]
INSTRUCTION-JUMP
   OPERAND1-ISR
  OP1 VALUE-300
   OPERAND2-
  OP2 VALUE-
    COMMENT-
