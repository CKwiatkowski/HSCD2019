    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-IO_Port
  OP1 VALUE-IO_Port
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED0
  OP1 VALUE-LED0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED1
  OP1 VALUE-LED1
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-BNT0
  OP1 VALUE-BNT0
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-COM_Port
  OP1 VALUE-COM_Port
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-TXD
  OP1 VALUE-TXD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-RXD
  OP1 VALUE-RXD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ACONST
  OP1 VALUE-ACONST
   OPERAND2-42
  OP2 VALUE-42
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SIXTEEN
  OP1 VALUE-SIXTEEN
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-EIGHT
  OP1 VALUE-EIGHT
   OPERAND2-08
  OP2 VALUE-08
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Register Mapping
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; alle acht Register s0 bis s7 stehen der ISR zur Verfuegung
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-IOR
  OP2 VALUE-IOR
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-TMP
  OP2 VALUE-TMP
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-CNTH
  OP2 VALUE-CNTH
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-CNTL
  OP2 VALUE-CNTL
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-CNTR16
  OP2 VALUE-CNTR16
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; alle acht Register s8 bis sF stehen der Main-Funktion zur Verfuegung
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s8
  OP1 VALUE-s8
   OPERAND2-CNT16
  OP2 VALUE-CNT16
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s9
  OP1 VALUE-s9
   OPERAND2-CNT8
  OP2 VALUE-CNT8
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sA
  OP1 VALUE-sA
   OPERAND2-DATA
  OP2 VALUE-DATA
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sB
  OP1 VALUE-sB
   OPERAND2-READ_REG
  OP2 VALUE-READ_REG
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sC
  OP1 VALUE-sC
   OPERAND2-STATEWRITE
  OP2 VALUE-STATEWRITE
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-STATEREAD
  OP2 VALUE-STATEREAD
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sE
  OP1 VALUE-sE
   OPERAND2-READY_TO_WRITE
  OP2 VALUE-READY_TO_WRITE
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CNTR8
  OP2 VALUE-CNTR8
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-000
  OP1 VALUE-000
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Hauptfunktion
    ADDRESS-000
      LABEL-start
INSTRUCTION-AND
   OPERAND1-CNTH
  OP1 VALUE-s2
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; Initialisierung der Zaehlers ...
    ADDRESS-001
      LABEL-
INSTRUCTION-AND
   OPERAND1-CNTL
  OP1 VALUE-s3
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; in der ISR
    ADDRESS-002
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; Setzt Zustand auf 0
    ADDRESS-003
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Write-Erlaubnis sperren
    ADDRESS-004
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-; Taktzähler auf 16 setzen
    ADDRESS-005
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT8
  OP1 VALUE-s9
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Bitzähler auf 8 setzen
    ADDRESS-006
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-; Taktzähler auf 16 setzen
    ADDRESS-007
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Bitzähler auf 8 setzen
    ADDRESS-008
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
  OP1 VALUE-INTERRUPT
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-009
      LABEL-loop
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; do nothing
    ADDRESS-009
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-loop
  OP1 VALUE-009
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die den Zustand des Buttons BTN0 auf die Leuchtdiode LED0 durchschaltet
    ADDRESS-00A
      LABEL-BNT0LED0
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00A
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; IO-Port einlesen
    ADDRESS-00B
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; IO-Port einlesen
    ADDRESS-00C
      LABEL-
INSTRUCTION-AND
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-BNT0
  OP2 VALUE-04
    COMMENT-; Zustand von BNT0 ermitteln
    ADDRESS-00D
      LABEL-
INSTRUCTION-SR0
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-; auf die Position ...
    ADDRESS-00E
      LABEL-
INSTRUCTION-SR0
   OPERAND1-TMP
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ... von LED0 verschieben
    ADDRESS-00F
      LABEL-
INSTRUCTION-AND
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-LED1
  OP2 VALUE-02
    COMMENT-; Zustand von LED1 ermitteln
    ADDRESS-010
      LABEL-
INSTRUCTION-OR
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-TMP
  OP2 VALUE-s1
    COMMENT-; LED1 mit BNT0 konkatinieren
    ADDRESS-011
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; den neuen Wert ueber IO-Port ausgeben
    ADDRESS-012
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die die Leuchtdione LED1 mit ca. 1 Hz blinken laesst
    ADDRESS-013
      LABEL-BLINK
INSTRUCTION-ADD
   OPERAND1-CNTL
  OP1 VALUE-s3
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; den 16-Bit-Zaehler ...
    ADDRESS-014
      LABEL-
INSTRUCTION-ADDCY
   OPERAND1-CNTH
  OP1 VALUE-s2
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; .. inkrementieren
    ADDRESS-015
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-BLINK0
  OP2 VALUE-019
    COMMENT-; kein Ueberlauf -> exit, sonst
    ADDRESS-016
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; IO-Port einlesen
    ADDRESS-017
      LABEL-
INSTRUCTION-XOR
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-LED1
  OP2 VALUE-02
    COMMENT-; LED1 toggeln
    ADDRESS-018
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-IO_Port
  OP2 VALUE-00
    COMMENT-; den neuen Wert ueber IO-Port ausgeben
    ADDRESS-019
      LABEL-BLINK0
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die Daten ueber das serielle Eingangssignal RXD abtastet,
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; zu einem Byte zusammensetzt, entschidet, ob das empfangene Byte
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ein Buchstabe oder eine Ziffer ist, und ggf. das Byte seriell
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ueber das serielle Ausgangssignal TXD ausgibt
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; in dieser Version ist eine einfache Echo-Funktion implementiert
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;COMM:
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;        RETURN
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-01A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subroutine, die Daten in das Ausgangsportal TXD schreibt
    ADDRESS-01A
      LABEL-WRITE
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01A
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-01B
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01C
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-01D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-WRITE_STARTBIT
  OP2 VALUE-023
    COMMENT-
    ADDRESS-01E
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-01F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-WRITE_DATA
  OP2 VALUE-02A
    COMMENT-
    ADDRESS-020
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-021
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-WRITE_STOPBIT
  OP2 VALUE-034
    COMMENT-
    ADDRESS-022
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-WRITE_IDLE
  OP1 VALUE-03C
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-023
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-023
      LABEL-WRITE_STARTBIT
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-023
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-024
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-025
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen         ; 16 Takte abwarten
    ADDRESS-026
      LABEL-
INSTRUCTION-AND
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-027
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-028
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-029
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-02A
      LABEL-WRITE_DATA
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02A
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-02B
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen         ; 16 Takte abwarten
    ADDRESS-02D
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-; Datenregister auf Output setzen
    ADDRESS-02E
      LABEL-
INSTRUCTION-SR0
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02F
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT8
  OP1 VALUE-s9
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Daten bitweise herausschreiben
    ADDRESS-030
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-031
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT8
  OP1 VALUE-s9
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Zaehler zurücksetzen
    ADDRESS-032
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-033
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-034
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-034
      LABEL-WRITE_STOPBIT
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-034
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-035
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-036
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNT16
  OP1 VALUE-s8
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen
    ADDRESS-037
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-038
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-039
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-03A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-;Schreibsperre aktivieren
    ADDRESS-03B
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-03C
      LABEL-WRITE_IDLE
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEWRITE
  OP1 VALUE-sC
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-03D
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-03E
      LABEL-READ
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03E
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-03F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-READ_STARTBIT
  OP2 VALUE-05E
    COMMENT-
    ADDRESS-040
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-041
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-READ_DATA
  OP2 VALUE-045
    COMMENT-
    ADDRESS-042
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-043
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-READ_STOPBIT
  OP2 VALUE-066
    COMMENT-
    ADDRESS-044
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-READ_IDLE
  OP1 VALUE-076
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-045
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-045
      LABEL-READ_DATA
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-045
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-046
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-047
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-
    ADDRESS-048
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-049
      LABEL-
INSTRUCTION-OR
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-IOR
  OP2 VALUE-s0
    COMMENT-
    ADDRESS-04A
      LABEL-
INSTRUCTION-RR
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Inhalt des Read-Registers nach links verschieben
    ADDRESS-04B
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Daten bitweise herausschreiben
    ADDRESS-04C
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-04D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Zaehler zurücksetzen
    ADDRESS-04E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-04F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; change state
    ADDRESS-04F
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-050
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-050
      LABEL-CHECK_GROSS
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-050
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-5B
  OP2 VALUE-5B
    COMMENT-; ist es größer als 5A?
    ADDRESS-051
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-052
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-41
  OP2 VALUE-41
    COMMENT-; ist es kleiner als 41?
    ADDRESS-053
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
  OP1 VALUE-C
   OPERAND2-CHECK_ZAHL
  OP2 VALUE-058
    COMMENT-
    ADDRESS-054
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-055
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-READ_REG
  OP2 VALUE-sB
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
    ADDRESS-056
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;Schreibsperre aufheben
    ADDRESS-057
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-058
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-058
      LABEL-CHECK_ZAHL
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-058
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-3A
  OP2 VALUE-3A
    COMMENT-; ist es größer als 39
    ADDRESS-059
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-05A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-05B
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-READ_REG
  OP2 VALUE-sB
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
    ADDRESS-05C
      LABEL-
INSTRUCTION-AND
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;Schreibsperre aufheben
    ADDRESS-05D
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-05E
      LABEL-READ_STARTBIT
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05E
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-05F
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-060
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-061
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-062
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-063
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-
    ADDRESS-064
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-065
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-066
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-066
      LABEL-READ_STOPBIT
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-066
      LABEL-
INSTRUCTION-SUB
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-067
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-068
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen
    ADDRESS-069
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-COM_Port
  OP2 VALUE-01
    COMMENT-
    ADDRESS-06A
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-IOR
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-06B
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-06C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Bereich einschränken
    ADDRESS-06C
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-;ist es kleiner als #30?
    ADDRESS-06D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
  OP1 VALUE-C
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-06E
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-7B
  OP2 VALUE-7B
    COMMENT-;ist es größer als #7A?
    ADDRESS-06F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NC
  OP1 VALUE-NC
   OPERAND2-READ_IDLE
  OP2 VALUE-076
    COMMENT-
    ADDRESS-070
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Kleinbuchstabe
    ADDRESS-070
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-61
  OP2 VALUE-61
    COMMENT-
    ADDRESS-071
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
  OP1 VALUE-C
   OPERAND2-CHECK_GROSS
  OP2 VALUE-050
    COMMENT-
    ADDRESS-072
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-073
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-DATA
  OP1 VALUE-sA
   OPERAND2-READ_REG
  OP2 VALUE-sB
    COMMENT-; Inhalt des Leseregisters ins Schreibregister laden
    ADDRESS-074
      LABEL-
INSTRUCTION-AND
   OPERAND1-READY_TO_WRITE
  OP1 VALUE-sE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;Schreibsperre aufheben
    ADDRESS-075
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-076
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-076
      LABEL-READ_IDLE
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-076
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR8
  OP1 VALUE-sF
   OPERAND2-EIGHT
  OP2 VALUE-08
    COMMENT-; Zaehler zurücksetzen
    ADDRESS-077
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-CNTR16
  OP1 VALUE-s6
   OPERAND2-SIXTEEN
  OP2 VALUE-10
    COMMENT-;Zaehler zurücksetzen
    ADDRESS-078
      LABEL-
INSTRUCTION-AND
   OPERAND1-STATEREAD
  OP1 VALUE-sD
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-079
      LABEL-
INSTRUCTION-AND
   OPERAND1-READ_REG
  OP1 VALUE-sB
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-07A
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-07B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-300
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-300
  OP1 VALUE-300
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-300
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt-Service-Routine
    ADDRESS-300
      LABEL-ISR
INSTRUCTION-CALL
   OPERAND1-BNT0LED0
  OP1 VALUE-00A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-301
      LABEL-
INSTRUCTION-CALL
   OPERAND1-BLINK
  OP1 VALUE-013
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-302
      LABEL-
INSTRUCTION-CALL
   OPERAND1-READ
  OP1 VALUE-03E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-303
      LABEL-
INSTRUCTION-CALL
   OPERAND1-WRITE
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-304
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-305
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; --------------------------------------------------------------------------------------------
    ADDRESS-305
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt-Vektor
    ADDRESS-3FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
  OP1 VALUE-3FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-3FF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR
  OP1 VALUE-300
   OPERAND2-
  OP2 VALUE-
    COMMENT-
